// scalping strategy to be used with Heikin Ashi, part of the code was applied in python to be executed on Binance.
//@version=4
strategy("Estrategia para Scalping by Rafael Solitario"
   ,calc_on_every_tick=true
   ,overlay=true
   ,shorttitle="Scalping 27% ganancia"
   ,commission_type= strategy.commission.percent
   ,commission_value=0.05
   ,initial_capital=100
   ,default_qty_type=strategy.percent_of_equity
   ,default_qty_value=100)
   
enableLong = input(true, title="Enable Long", type=input.bool)
enableShort = input(false, title="Enable Short", type=input.bool)
   
lenght_v = input(5, title="NÃºmero de dias para promedio exponencial", type=input.integer)

var string GP2 = "Display Table"
showDisplay = input(true,"Show Display Pane", group = GP2)
string  i_tableYpos = input("top", "Display position", inline = "11", options = ["top", "middle", "bottom"], group = GP2)
string  i_tableXpos = input("right", "", inline = "11", options = ["left", "center", "right"], group = GP2)
//color   i_c_bull    = input(color.new(color.green, 30), "Bull", inline = "12", group = GP2)
//color   i_c_bear    = input(color.new(color.red, 30), "Bear", inline = "12", group = GP2)
color   i_c_neutral = input(color.new(#434651, 00), "Display Background", inline = "12", group = GP2)
c = input(title="Display Text Color", type=input.color, defval=color.white, group = GP2)
perProfitable = (strategy.wintrades/strategy.closedtrades)*100

var table panel = table.new(i_tableYpos + "_" + i_tableXpos, 2, 30, border_width = 1)
if showDisplay
    table.cell(panel, 0, 0, "PAR", bgcolor = i_c_neutral, text_color = c)
    table.cell(panel, 1, 0, syminfo.ticker, bgcolor = i_c_neutral, text_color = c)
    table.cell(panel, 0, 1, "Winners", bgcolor = i_c_neutral, text_color = c)
    table.cell(panel, 1, 1, tostring(strategy.wintrades), bgcolor = i_c_neutral, text_color = c)
    table.cell(panel, 0, 2, "Losers", bgcolor = i_c_neutral, text_color = c)
    table.cell(panel, 1, 2, tostring(strategy.losstrades), bgcolor = i_c_neutral, text_color = c)
    table.cell(panel, 0, 3, "Percent Profitable", bgcolor = i_c_neutral, text_color = c)
    table.cell(panel, 1, 3, tostring(round(perProfitable))+"%", bgcolor = i_c_neutral, text_color = c)
    table.cell(panel, 0, 4, "Initial Capital", bgcolor = i_c_neutral, text_color = c)
    table.cell(panel, 1, 4, tostring(strategy.initial_capital)+" USD", bgcolor = i_c_neutral, text_color = c)
    table.cell(panel, 0, 5, "Ending Capital", bgcolor = i_c_neutral, text_color = c)
    table.cell(panel, 1, 5,tostring(round(strategy.initial_capital+strategy.netprofit))+" USD", bgcolor = i_c_neutral, text_color = c)
    table.cell(panel, 0, 6, "Net Profit", bgcolor = i_c_neutral, text_color = c)
    table.cell(panel, 1, 6, tostring(round(strategy.netprofit))+" USD", bgcolor = i_c_neutral, text_color = c)
    table.cell(panel, 0, 7, "% Return", bgcolor = i_c_neutral, text_color = c)
    table.cell(panel, 1, 7, tostring(round((strategy.netprofit/strategy.initial_capital)*100))+" %", bgcolor = i_c_neutral, text_color = c)
    table.cell(panel, 0, 8, "Gross Profit", bgcolor = i_c_neutral, text_color = c)
    table.cell(panel, 1, 8, tostring(round(strategy.grossprofit))+" USD", bgcolor = i_c_neutral, text_color = c)
    table.cell(panel, 0, 9, "Gross Loss", bgcolor = i_c_neutral, text_color = c)
    table.cell(panel, 1, 9, tostring(round(strategy.grossloss))+" USD", bgcolor = i_c_neutral, text_color = c)
    table.cell(panel, 0, 10, "Max Drawdown", bgcolor = i_c_neutral, text_color = c)
    table.cell(panel, 1, 10, tostring(round(strategy.max_drawdown))+" USD", bgcolor = i_c_neutral, text_color = c)
    table.cell(panel, 0, 11, "Number of Trades", bgcolor = i_c_neutral, text_color = c)
    table.cell(panel, 1, 11, tostring(round(strategy.closedtrades)), bgcolor = i_c_neutral, text_color = c)

///////////////////////
//Long Trailing Stop//
/////////////////////
stopPer = input(1.0, title="Long Trailing Stop (%)", type=input.float) / 100

longStop = 0.0
longStop := if strategy.position_size > 0
    stopValue = close * (1 - stopPer)
    max(stopValue, longStop[1])
else
    0

shortStop = 0.0
shortStop := if strategy.position_size < 0
    stopValue = close * (1 + stopPer)
    min(stopValue, shortStop[1])
else
    100000

// if strategy.position_size > 0
//     strategy.exit(id="Close Long", stop=longStop, profit = close + close * 0.015 )
//if strategy.position_size < 0 
plot(series=strategy.position_size > 0 ? longStop : na, color=color.red, style=plot.style_linebr, linewidth=1, title="Long Trail Stop", offset=1, title="Long Trail Stop")
plot(series=strategy.position_size < 0 ? shortStop : na, color=color.fuchsia, style=plot.style_linebr, linewidth=1, title="Long Trail Stop", offset=1, title="short Trail Stop")
exit = close <= longStop
//////////////////
// END TS      //
////////////////

//	Tool
i_macd(src, fast, slow, length, def) =>
    r = 0.0
    macd = ema(src, fast) - ema(src, slow)
    signal = ema(macd, length)
    hist = macd - signal
    if def == "macdL"
        r := macd
    if def == "signalL"
        r := signal
    if def == "histL"
        r := hist
    r
    
sep_porcentual (src, cot)=>
    rslt = ((src - cot) * 100 ) / src
    rslt
// End Tool

t = tickerid(syminfo.prefix, syminfo.ticker, syminfo.session)
ha_t = heikinashi(t)
//[macdLine, signalLine, histLine] = security(ha_t, "3", macd(close, 12, 26, 9))
[macdLine, signalLine, histLine] = macd(close, 12, 26, 9)


// plot(macdLine)
// plot(signalLine, color=color.orange)
buy = if crossover(macdLine, signalLine)
	true
sell = if crossunder(macdLine, signalLine)
    true

strategy.entry("long", true, when = buy and enableLong, comment="Largo")
strategy.close("long", when= sell, comment="close largo")
strategy.exit("Exit Long", "long", stop=longStop, comment="Exit long por Trailing Stop")

strategy.entry("short", false, when = sell and enableShort, comment="corto")
strategy.close("short", when= buy, comment="close corto")
strategy.exit("Exit Long", "short", stop=shortStop, comment="Exit short por Trailing Stop")
